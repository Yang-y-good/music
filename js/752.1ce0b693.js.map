{"version":3,"file":"js/752.1ce0b693.js","mappings":"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","sources":["webpack://music/./src/utils/formatNumber.js","webpack://music/./src/components/main-nav.vue?696b","webpack://music/./src/components/main-nav.vue","webpack://music/./src/components/main-nav.vue?14d2","webpack://music/../../packages/components/tabs/src/tab-bar.ts","webpack://music/../../packages/tokens/tabs.ts","webpack://music/../../packages/components/tabs/src/tab-bar.vue","webpack://music/../../packages/components/tabs/src/tab-nav.tsx","webpack://music/../../packages/components/tabs/src/tabs.tsx","webpack://music/../../packages/components/tabs/src/tab-pane.ts","webpack://music/../../packages/components/tabs/src/tab-pane.vue","webpack://music/../../packages/components/tabs/index.ts"],"sourcesContent":["export function formatNumber(num) {\r\n    const arr = Array.from(String(num))\r\n    //十万\r\n    if (arr.length === 6) {\r\n        return arr.join('').slice(0, 2) + '万'\r\n    }\r\n    // 百万\r\n    if (arr.length === 7) {\r\n        return arr.join('').slice(0, 3) + '万'\r\n    }\r\n    // 千万\r\n    if (arr.length === 8) {\r\n        return arr.join('').slice(0, 4) + '万'\r\n    }\r\n    // 亿\r\n    if (arr.length === 9) {\r\n        return arr.join('').slice(0, 1) + '亿'\r\n    }\r\n    // 十亿\r\n    if (arr.length === 10) {\r\n        return arr.join('').slice(0, 2) + '亿'\r\n    }\r\n    // 百亿\r\n    if (arr.length === 11) {\r\n        return arr.join('').slice(0, 3) + '亿'\r\n    }\r\n\r\n    return num\r\n}\r\n\r\n// console.log(formatNumbet(183456))","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, normalizeClass as _normalizeClass } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass({\n      'main-nav': _ctx.isfixed\n    }),\n    ref: \"mainNav\"\n  }, [_createVNode(_component_el_tabs, {\n    modelValue: _ctx.activeIndex,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.activeIndex = $event),\n    class: \"demo-tabs\",\n    onTabChange: _ctx.handleClick\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.title, (item, index) => {\n      return _openBlock(), _createBlock(_component_el_tab_pane, {\n        key: index,\n        label: item,\n        name: index\n      }, {\n        default: _withCtx(() => [_renderSlot(_ctx.$slots, index)]),\n        _: 2\n      }, 1032, [\"label\", \"name\"]);\n    }), 128))]),\n    _: 3\n  }, 8, [\"modelValue\", \"onTabChange\"])], 2);\n}","import { computed, defineComponent, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default defineComponent({\n  name: \"\",\n  components: {},\n  props: {\n    title: {\n      type: Array,\n      required: true\n    },\n    isfixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"tabIndex\"],\n\n  setup(props, {\n    emit\n  }) {\n    const store = useStore();\n    const mainNav = ref(); // tab标签下标\n\n    const activeIndex = ref(0); // tab点击事件\n\n    const handleClick = (tabIndex, event) => {\n      // 记录点击切换的下标\n      store.commit(\"setTabsIndex\", tabIndex); // 发送事件，记录切换的下标\n\n      emit('tabIndex', tabIndex);\n    }; // 监听tba栏的切换\n\n\n    watch(() => store.state.tabsIndex, value => {\n      activeIndex.value = value;\n    });\n    return {\n      handleClick,\n      mainNav,\n      activeIndex\n    };\n  }\n\n});","/* unplugin-vue-components disabled */import { render } from \"./main-nav.vue?vue&type=template&id=2a32198a\"\nimport script from \"./main-nav.vue?vue&type=script&lang=js\"\nexport * from \"./main-nav.vue?vue&type=script&lang=js\"\n\nimport \"./main-nav.vue?vue&type=style&index=0&id=2a32198a&lang=less\"\n\nimport exportComponent from \"D:\\\\网易云\\\\music\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type { TabsPaneContext } from '@element-plus/tokens'\nimport type TabBar from './tab-bar.vue'\n\nexport const tabBarProps = buildProps({\n  tabs: {\n    type: definePropType<TabsPaneContext[]>(Array),\n    default: () => mutable([] as const),\n  },\n} as const)\n\nexport type TabBarProps = ExtractPropTypes<typeof tabBarProps>\nexport type TabBarInstance = InstanceType<typeof TabBar>\n","import type { TabPaneProps, TabsProps } from '@element-plus/components/tabs'\nimport type { ComputedRef, InjectionKey, Ref, Slots, UnwrapRef } from 'vue'\n\nexport type TabsPaneContext = UnwrapRef<{\n  uid: number\n  slots: Slots\n  props: TabPaneProps\n  paneName: ComputedRef<string | number | undefined>\n  active: ComputedRef<boolean>\n  index: Ref<string | undefined>\n  isClosable: ComputedRef<boolean>\n}>\n\nexport interface TabsRootContext {\n  props: TabsProps\n  currentName: Ref<string | number>\n  registerPane: (pane: TabsPaneContext) => void\n  unregisterPane: (uid: number) => void\n}\n\nexport const tabsRootContextKey: InjectionKey<TabsRootContext> =\n  Symbol('tabsRootContextKey')\n","<template>\n  <div\n    ref=\"barRef\"\n    :class=\"[ns.e('active-bar'), ns.is(rootTabs.props.tabPosition)]\"\n    :style=\"barStyle\"\n  />\n</template>\n<script lang=\"ts\" setup>\n// @ts-nocheck\nimport { getCurrentInstance, inject, nextTick, ref, watch } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { capitalize, throwError } from '@element-plus/utils'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport { useNamespace } from '@element-plus/hooks'\nimport { tabBarProps } from './tab-bar'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElTabBar'\ndefineOptions({\n  name: 'ElTabBar',\n})\nconst props = defineProps(tabBarProps)\n\nconst instance = getCurrentInstance()!\nconst rootTabs = inject(tabsRootContextKey)\nif (!rootTabs) throwError(COMPONENT_NAME, '<el-tabs><el-tab-bar /></el-tabs>')\n\nconst ns = useNamespace('tabs')\n\nconst barRef = ref<HTMLDivElement>()\nconst barStyle = ref<CSSProperties>()\n\nconst getBarStyle = (): CSSProperties => {\n  let offset = 0\n  let tabSize = 0\n\n  const sizeName = ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n    ? 'width'\n    : 'height'\n  const sizeDir = sizeName === 'width' ? 'x' : 'y'\n\n  props.tabs.every((tab) => {\n    const $el = instance.parent?.refs?.[`tab-${tab.uid}`] as HTMLElement\n    if (!$el) return false\n\n    if (!tab.active) {\n      return true\n    }\n\n    tabSize = $el[`client${capitalize(sizeName)}`]\n    const position = sizeDir === 'x' ? 'left' : 'top'\n    offset =\n      $el.getBoundingClientRect()[position] -\n      ($el.parentElement?.getBoundingClientRect()[position] ?? 0)\n    const tabStyles = window.getComputedStyle($el)\n\n    if (sizeName === 'width') {\n      if (props.tabs.length > 1) {\n        tabSize -=\n          Number.parseFloat(tabStyles.paddingLeft) +\n          Number.parseFloat(tabStyles.paddingRight)\n      }\n      offset += Number.parseFloat(tabStyles.paddingLeft)\n    }\n    return false\n  })\n\n  return {\n    [sizeName]: `${tabSize}px`,\n    transform: `translate${capitalize(sizeDir)}(${offset}px)`,\n  }\n}\n\nconst update = () => (barStyle.value = getBarStyle())\n\nwatch(\n  () => props.tabs,\n  async () => {\n    await nextTick()\n    update()\n  },\n  { immediate: true }\n)\nuseResizeObserver(barRef, () => update())\n\ndefineExpose({\n  /** @description tab root html element */\n  ref: barRef,\n  /** @description method to manually update tab bar style */\n  update,\n})\n</script>\n","// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  onMounted,\n  onUpdated,\n  ref,\n  watch,\n} from 'vue'\nimport { NOOP } from '@vue/shared'\nimport {\n  useDocumentVisibility,\n  useResizeObserver,\n  useWindowFocus,\n} from '@vueuse/core'\nimport {\n  buildProps,\n  capitalize,\n  definePropType,\n  mutable,\n  throwError,\n} from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft, ArrowRight, Close } from '@element-plus/icons-vue'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport { useNamespace } from '@element-plus/hooks'\nimport TabBar from './tab-bar.vue'\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\nimport type { TabsPaneContext } from '@element-plus/tokens'\nimport type { TabPanelName } from './tabs'\n\ninterface Scrollable {\n  next?: boolean\n  prev?: number\n}\n\nexport const tabNavProps = buildProps({\n  panes: {\n    type: definePropType<TabsPaneContext[]>(Array),\n    default: () => mutable([] as const),\n  },\n  currentName: {\n    type: [String, Number],\n    default: '',\n  },\n  editable: Boolean,\n  onTabClick: {\n    type: definePropType<\n      (tab: TabsPaneContext, tabName: TabPanelName, ev: Event) => void\n    >(Function),\n    default: NOOP,\n  },\n  onTabRemove: {\n    type: definePropType<(tab: TabsPaneContext, ev: Event) => void>(Function),\n    default: NOOP,\n  },\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  stretch: Boolean,\n} as const)\n\nexport type TabNavProps = ExtractPropTypes<typeof tabNavProps>\n\nconst COMPONENT_NAME = 'ElTabNav'\nconst TabNav = defineComponent({\n  name: COMPONENT_NAME,\n  props: tabNavProps,\n\n  setup(props, { expose }) {\n    const vm = getCurrentInstance()!\n\n    const rootTabs = inject(tabsRootContextKey)\n    if (!rootTabs) throwError(COMPONENT_NAME, `<el-tabs><tab-nav /></el-tabs>`)\n\n    const ns = useNamespace('tabs')\n    const visibility = useDocumentVisibility()\n    const focused = useWindowFocus()\n\n    const navScroll$ = ref<HTMLDivElement>()\n    const nav$ = ref<HTMLDivElement>()\n    const el$ = ref<HTMLDivElement>()\n\n    const scrollable = ref<false | Scrollable>(false)\n    const navOffset = ref(0)\n    const isFocus = ref(false)\n    const focusable = ref(true)\n\n    const sizeName = computed(() =>\n      ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n        ? 'width'\n        : 'height'\n    )\n    const navStyle = computed<CSSProperties>(() => {\n      const dir = sizeName.value === 'width' ? 'X' : 'Y'\n      return {\n        transform: `translate${dir}(-${navOffset.value}px)`,\n      }\n    })\n\n    const scrollPrev = () => {\n      if (!navScroll$.value) return\n\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (!currentOffset) return\n\n      const newOffset =\n        currentOffset > containerSize ? currentOffset - containerSize : 0\n\n      navOffset.value = newOffset\n    }\n\n    const scrollNext = () => {\n      if (!navScroll$.value || !nav$.value) return\n\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`]\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (navSize - currentOffset <= containerSize) return\n\n      const newOffset =\n        navSize - currentOffset > containerSize * 2\n          ? currentOffset + containerSize\n          : navSize - containerSize\n\n      navOffset.value = newOffset\n    }\n\n    const scrollToActiveTab = async () => {\n      const nav = nav$.value\n      if (!scrollable.value || !el$.value || !navScroll$.value || !nav) return\n\n      await nextTick()\n\n      const activeTab = el$.value.querySelector('.is-active')\n      if (!activeTab) return\n\n      const navScroll = navScroll$.value\n      const isHorizontal = ['top', 'bottom'].includes(\n        rootTabs.props.tabPosition\n      )\n      const activeTabBounding = activeTab.getBoundingClientRect()\n      const navScrollBounding = navScroll.getBoundingClientRect()\n      const maxOffset = isHorizontal\n        ? nav.offsetWidth - navScrollBounding.width\n        : nav.offsetHeight - navScrollBounding.height\n      const currentOffset = navOffset.value\n      let newOffset = currentOffset\n\n      if (isHorizontal) {\n        if (activeTabBounding.left < navScrollBounding.left) {\n          newOffset =\n            currentOffset - (navScrollBounding.left - activeTabBounding.left)\n        }\n        if (activeTabBounding.right > navScrollBounding.right) {\n          newOffset =\n            currentOffset + activeTabBounding.right - navScrollBounding.right\n        }\n      } else {\n        if (activeTabBounding.top < navScrollBounding.top) {\n          newOffset =\n            currentOffset - (navScrollBounding.top - activeTabBounding.top)\n        }\n        if (activeTabBounding.bottom > navScrollBounding.bottom) {\n          newOffset =\n            currentOffset +\n            (activeTabBounding.bottom - navScrollBounding.bottom)\n        }\n      }\n      newOffset = Math.max(newOffset, 0)\n      navOffset.value = Math.min(newOffset, maxOffset)\n    }\n\n    const update = () => {\n      if (!nav$.value || !navScroll$.value) return\n\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`]\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (containerSize < navSize) {\n        const currentOffset = navOffset.value\n        scrollable.value = scrollable.value || {}\n        scrollable.value.prev = currentOffset\n        scrollable.value.next = currentOffset + containerSize < navSize\n        if (navSize - currentOffset < containerSize) {\n          navOffset.value = navSize - containerSize\n        }\n      } else {\n        scrollable.value = false\n        if (currentOffset > 0) {\n          navOffset.value = 0\n        }\n      }\n    }\n\n    const changeTab = (e: KeyboardEvent) => {\n      const code = e.code\n\n      const { up, down, left, right } = EVENT_CODE\n      if (![up, down, left, right].includes(code)) return\n\n      // 左右上下键更换tab\n      const tabList = Array.from(\n        (e.currentTarget as HTMLDivElement).querySelectorAll<HTMLDivElement>(\n          '[role=tab]:not(.is-disabled)'\n        )\n      )\n      const currentIndex = tabList.indexOf(e.target as HTMLDivElement)\n\n      let nextIndex: number\n      if (code === left || code === up) {\n        // left\n        if (currentIndex === 0) {\n          // first\n          nextIndex = tabList.length - 1\n        } else {\n          nextIndex = currentIndex - 1\n        }\n      } else {\n        // right\n        if (currentIndex < tabList.length - 1) {\n          // not last\n          nextIndex = currentIndex + 1\n        } else {\n          nextIndex = 0\n        }\n      }\n      tabList[nextIndex].focus() // 改变焦点元素\n      tabList[nextIndex].click() // 选中下一个tab\n      setFocus()\n    }\n\n    const setFocus = () => {\n      if (focusable.value) isFocus.value = true\n    }\n    const removeFocus = () => (isFocus.value = false)\n\n    watch(visibility, (visibility) => {\n      if (visibility === 'hidden') {\n        focusable.value = false\n      } else if (visibility === 'visible') {\n        setTimeout(() => (focusable.value = true), 50)\n      }\n    })\n    watch(focused, (focused) => {\n      if (focused) {\n        setTimeout(() => (focusable.value = true), 50)\n      } else {\n        focusable.value = false\n      }\n    })\n\n    useResizeObserver(el$, update)\n\n    onMounted(() => setTimeout(() => scrollToActiveTab(), 0))\n    onUpdated(() => update())\n\n    expose({\n      scrollToActiveTab,\n      removeFocus,\n    })\n\n    watch(\n      () => props.panes,\n      () => vm.update(),\n      { flush: 'post' }\n    )\n\n    return () => {\n      const scrollBtn = scrollable.value\n        ? [\n            <span\n              class={[\n                ns.e('nav-prev'),\n                ns.is('disabled', !scrollable.value.prev),\n              ]}\n              onClick={scrollPrev}\n            >\n              <ElIcon>\n                <ArrowLeft />\n              </ElIcon>\n            </span>,\n            <span\n              class={[\n                ns.e('nav-next'),\n                ns.is('disabled', !scrollable.value.next),\n              ]}\n              onClick={scrollNext}\n            >\n              <ElIcon>\n                <ArrowRight />\n              </ElIcon>\n            </span>,\n          ]\n        : null\n\n      const tabs = props.panes.map((pane, index) => {\n        const uid = pane.uid\n        const disabled = pane.props.disabled\n        const tabName = pane.props.name ?? pane.index ?? `${index}`\n        const closable = !disabled && (pane.isClosable || props.editable)\n        pane.index = `${index}`\n\n        const btnClose = closable ? (\n          <ElIcon\n            class=\"is-icon-close\"\n            // `onClick` not exist when generate dts\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            onClick={(ev: MouseEvent) => props.onTabRemove(pane, ev)}\n          >\n            <Close />\n          </ElIcon>\n        ) : null\n\n        const tabLabelContent = pane.slots.label?.() || pane.props.label\n        const tabindex = !disabled && pane.active ? 0 : -1\n\n        return (\n          <div\n            ref={`tab-${uid}`}\n            class={[\n              ns.e('item'),\n              ns.is(rootTabs.props.tabPosition),\n              ns.is('active', pane.active),\n              ns.is('disabled', disabled),\n              ns.is('closable', closable),\n              ns.is('focus', isFocus.value),\n            ]}\n            id={`tab-${tabName}`}\n            key={`tab-${uid}`}\n            aria-controls={`pane-${tabName}`}\n            role=\"tab\"\n            aria-selected={pane.active}\n            tabindex={tabindex}\n            onFocus={() => setFocus()}\n            onBlur={() => removeFocus()}\n            onClick={(ev: MouseEvent) => {\n              removeFocus()\n              props.onTabClick(pane, tabName, ev)\n            }}\n            onKeydown={(ev: KeyboardEvent) => {\n              if (\n                closable &&\n                (ev.code === EVENT_CODE.delete ||\n                  ev.code === EVENT_CODE.backspace)\n              ) {\n                props.onTabRemove(pane, ev)\n              }\n            }}\n          >\n            {...[tabLabelContent, btnClose]}\n          </div>\n        )\n      })\n\n      return (\n        <div\n          ref={el$}\n          class={[\n            ns.e('nav-wrap'),\n            ns.is('scrollable', !!scrollable.value),\n            ns.is(rootTabs.props.tabPosition),\n          ]}\n        >\n          {scrollBtn}\n          <div class={ns.e('nav-scroll')} ref={navScroll$}>\n            <div\n              class={[\n                ns.e('nav'),\n                ns.is(rootTabs.props.tabPosition),\n                ns.is(\n                  'stretch',\n                  props.stretch &&\n                    ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n                ),\n              ]}\n              ref={nav$}\n              style={navStyle.value}\n              role=\"tablist\"\n              onKeydown={changeTab}\n            >\n              {...[\n                !props.type ? <TabBar tabs={[...props.panes]} /> : null,\n                tabs,\n              ]}\n            </div>\n          </div>\n        </div>\n      )\n    }\n  },\n})\n\nexport type TabNavInstance = InstanceType<typeof TabNav>\nexport default TabNav\n","import {\n  computed,\n  defineComponent,\n  nextTick,\n  provide,\n  reactive,\n  ref,\n  renderSlot,\n  watch,\n} from 'vue'\nimport {\n  buildProps,\n  definePropType,\n  isNumber,\n  isString,\n  isUndefined,\n} from '@element-plus/utils'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElIcon from '@element-plus/components/icon'\nimport { Plus } from '@element-plus/icons-vue'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport { useDeprecated, useNamespace } from '@element-plus/hooks'\nimport TabNav from './tab-nav'\nimport type { TabNavInstance } from './tab-nav'\nimport type { TabsPaneContext } from '@element-plus/tokens'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { Awaitable } from '@element-plus/utils'\n\nexport type TabPanelName = string | number\n\nexport const tabsProps = buildProps({\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  activeName: {\n    type: [String, Number],\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number],\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: ['top', 'right', 'bottom', 'left'],\n    default: 'top',\n  },\n  beforeLeave: {\n    type: definePropType<\n      (\n        newName: TabPanelName,\n        oldName: TabPanelName\n      ) => Awaitable<void | boolean>\n    >(Function),\n    default: () => true,\n  },\n  stretch: Boolean,\n} as const)\nexport type TabsProps = ExtractPropTypes<typeof tabsProps>\n\nconst isPanelName = (value: unknown): value is string | number =>\n  isString(value) || isNumber(value)\n\nexport const tabsEmits = {\n  [UPDATE_MODEL_EVENT]: (name: TabPanelName) => isPanelName(name),\n  'tab-click': (pane: TabsPaneContext, ev: Event) => ev instanceof Event,\n  'tab-change': (name: TabPanelName) => isPanelName(name),\n  edit: (paneName: TabPanelName | undefined, action: 'remove' | 'add') =>\n    ['remove', 'add'].includes(action),\n  'tab-remove': (name: TabPanelName) => isPanelName(name),\n  'tab-add': () => true,\n}\nexport type TabsEmits = typeof tabsEmits\n\nexport default defineComponent({\n  name: 'ElTabs',\n\n  props: tabsProps,\n  emits: tabsEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const ns = useNamespace('tabs')\n\n    const nav$ = ref<TabNavInstance>()\n    const panes = reactive<Record<number, TabsPaneContext>>({})\n    const currentName = ref<TabPanelName>(\n      props.modelValue ?? props.activeName ?? '0'\n    )\n\n    const changeCurrentName = (value: TabPanelName) => {\n      currentName.value = value\n      emit(UPDATE_MODEL_EVENT, value)\n      emit('tab-change', value)\n    }\n\n    const setCurrentName = async (value?: TabPanelName) => {\n      // should do nothing.\n      if (currentName.value === value || isUndefined(value)) return\n\n      try {\n        const canLeave = await props.beforeLeave?.(value, currentName.value)\n        if (canLeave !== false) {\n          changeCurrentName(value)\n\n          // call exposed function, Vue doesn't support expose in typescript yet.\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          nav$.value?.removeFocus?.()\n        }\n      } catch {}\n    }\n\n    const handleTabClick = (\n      tab: TabsPaneContext,\n      tabName: TabPanelName,\n      event: Event\n    ) => {\n      if (tab.props.disabled) return\n      setCurrentName(tabName)\n      emit('tab-click', tab, event)\n    }\n\n    const handleTabRemove = (pane: TabsPaneContext, ev: Event) => {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return\n      ev.stopPropagation()\n      emit('edit', pane.props.name, 'remove')\n      emit('tab-remove', pane.props.name)\n    }\n\n    const handleTabAdd = () => {\n      emit('edit', undefined, 'add')\n      emit('tab-add')\n    }\n\n    useDeprecated(\n      {\n        from: '\"activeName\"',\n        replacement: '\"model-value\" or \"v-model\"',\n        scope: 'ElTabs',\n        version: '2.3.0',\n        ref: 'https://element-plus.org/en-US/component/tabs.html#attributes',\n        type: 'Attribute',\n      },\n      computed(() => !!props.activeName)\n    )\n\n    watch(\n      () => props.activeName,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(\n      () => props.modelValue,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(currentName, async () => {\n      await nextTick()\n      // call exposed function, Vue doesn't support expose in typescript yet.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      nav$.value?.scrollToActiveTab()\n    })\n\n    {\n      const registerPane = (pane: TabsPaneContext) => (panes[pane.uid] = pane)\n      const unregisterPane = (uid: number) => delete panes[uid]\n\n      provide(tabsRootContextKey, {\n        props,\n        currentName,\n        registerPane,\n        unregisterPane,\n      })\n    }\n\n    expose({\n      currentName,\n    })\n\n    return () => {\n      const newButton =\n        props.editable || props.addable ? (\n          <span\n            class={ns.e('new-tab')}\n            tabindex=\"0\"\n            onClick={handleTabAdd}\n            onKeydown={(ev: KeyboardEvent) => {\n              if (ev.code === EVENT_CODE.enter) handleTabAdd()\n            }}\n          >\n            <ElIcon class={ns.is('icon-plus')}>\n              <Plus />\n            </ElIcon>\n          </span>\n        ) : null\n\n      const header = (\n        <div class={[ns.e('header'), ns.is(props.tabPosition)]}>\n          {newButton}\n          <TabNav\n            ref={nav$}\n            currentName={currentName.value}\n            editable={props.editable}\n            type={props.type}\n            panes={Object.values(panes)}\n            stretch={props.stretch}\n            onTabClick={handleTabClick}\n            onTabRemove={handleTabRemove}\n          />\n        </div>\n      )\n\n      const panels = (\n        <div class={ns.e('content')}>{renderSlot(slots, 'default')}</div>\n      )\n\n      return (\n        <div\n          class={[\n            ns.b(),\n            ns.m(props.tabPosition),\n            {\n              [ns.m('card')]: props.type === 'card',\n              [ns.m('border-card')]: props.type === 'border-card',\n            },\n          ]}\n        >\n          {...props.tabPosition !== 'bottom'\n            ? [header, panels]\n            : [panels, header]}\n        </div>\n      )\n    }\n  },\n})\n","import { buildProps } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type TabPane from './tab-pane.vue'\n\nexport const tabPaneProps = buildProps({\n  label: {\n    type: String,\n    default: '',\n  },\n  name: {\n    type: [String, Number],\n  },\n  closable: Boolean,\n  disabled: Boolean,\n  lazy: Boolean,\n} as const)\n\nexport type TabPaneProps = ExtractPropTypes<typeof tabPaneProps>\n\nexport type TabPaneInstance = InstanceType<typeof TabPane>\n","<template>\n  <div\n    v-if=\"shouldBeRender\"\n    v-show=\"active\"\n    :id=\"`pane-${paneName}`\"\n    :class=\"ns.b()\"\n    role=\"tabpanel\"\n    :aria-hidden=\"!active\"\n    :aria-labelledby=\"`tab-${paneName}`\"\n  >\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  getCurrentInstance,\n  inject,\n  onMounted,\n  onUnmounted,\n  reactive,\n  ref,\n  useSlots,\n  watch,\n} from 'vue'\nimport { eagerComputed } from '@vueuse/core'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport { throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { tabPaneProps } from './tab-pane'\n\nconst COMPONENT_NAME = 'ElTabPane'\ndefineOptions({\n  name: 'ElTabPane',\n})\nconst props = defineProps(tabPaneProps)\n\nconst instance = getCurrentInstance()!\nconst slots = useSlots()\n\nconst tabsRoot = inject(tabsRootContextKey)\nif (!tabsRoot)\n  throwError(COMPONENT_NAME, 'usage: <el-tabs><el-tab-pane /></el-tabs/>')\n\nconst ns = useNamespace('tab-pane')\n\nconst index = ref<string>()\nconst isClosable = computed(() => props.closable || tabsRoot.props.closable)\nconst active = eagerComputed(\n  () => tabsRoot.currentName.value === (props.name ?? index.value)\n)\nconst loaded = ref(active.value)\nconst paneName = computed(() => props.name ?? index.value)\nconst shouldBeRender = eagerComputed(\n  () => !props.lazy || loaded.value || active.value\n)\n\nwatch(active, (val) => {\n  if (val) loaded.value = true\n})\n\nconst pane = reactive({\n  uid: instance.uid,\n  slots,\n  props,\n  paneName,\n  active,\n  index,\n  isClosable,\n})\n\nonMounted(() => {\n  tabsRoot.registerPane(pane)\n})\n\nonUnmounted(() => {\n  tabsRoot.unregisterPane(pane.uid)\n})\n</script>\n","import { withInstall, withNoopInstall } from '@element-plus/utils'\nimport Tabs from './src/tabs'\nimport TabPane from './src/tab-pane.vue'\n\nexport const ElTabs = withInstall(Tabs, {\n  TabPane,\n})\nexport const ElTabPane = withNoopInstall(TabPane)\nexport default ElTabs\n\nexport * from './src/tabs'\nexport * from './src/tab-bar'\nexport * from './src/tab-nav'\nexport * from './src/tab-pane'\n"],"names":["formatNumber","num","arr","Array","from","String","length","join","slice","render","_ctx","_cache","$props","$setup","$data","$options","_component_el_tab_pane","_component_el_tabs","class","isfixed","ref","modelValue","activeIndex","$event","onTabChange","handleClick","default","title","item","index","key","label","name","$slots","_","defineComponent","components","props","type","required","Boolean","emits","setup","emit","store","useStore","mainNav","tabIndex","event","commit","watch","state","tabsIndex","value","__exports__","tabBarProps","buildProps","tabs","definePropType","mutable","tabsRootContextKey","Symbol","COMPONENT_NAME","instance","getCurrentInstance","rootTabs","inject","ns","barRef","barStyle","getBarStyle","tabSize","offset","transform","update","immediate","useResizeObserver","expose","TabBar","tabNavProps","panes","currentName","Number","editable","onTabClick","onTabRemove","values","stretch","TabNav","vm","throwError","visibility","useWindowFocus","focused","navScroll$","nav$","el$","scrollable","navOffset","isFocus","focusable","sizeName","computed","dir","scrollPrev","containerSize","newOffset","currentOffset","scrollNext","navSize","capitalize","scrollToActiveTab","async","nav","activeTab","activeTabBounding","navScrollBounding","includes","tabPosition","maxOffset","isHorizontal","left","right","top","bottom","currentOffset2","next","prev","code","up","down","changeTab","EVENT_CODE","tabList","currentIndex","nextIndex","focus","setFocus","removeFocus","flush","scrollBtn","setTimeout","onUpdated","_createVNode","uid","tabName","closable","pane","is","disabled","btnClose","ev","tabLabelContent","tabsProps","activeName","addable","beforeLeave","Function","tabsEmits","edit","action","isPanelName","slots","_a","_b","reactive","changeCurrentName","setCurrentName","UPDATE_MODEL_EVENT","_a2","_b2","_c","handleTabRemove","replacement","handleTabAdd","useDeprecated","scope","version","registerPane","unregisterPane","nextTick","newButton","e","tabPaneProps","lazy","useSlots","tabsRoot","isClosable","active","loaded","paneName","ElTabs","withInstall","Tabs","TabPane","ElTabPane","withNoopInstall"],"sourceRoot":""}